# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gain.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets 
import sqlite3
from PyQt5.QtWidgets import  QApplication , QMainWindow ,QTableWidgetItem ,QMessageBox,QAbstractItemView,QCompleter,QTreeWidgetItem

from PyQt5.QtGui import QStandardItemModel,QPixmap
from PyQt5.QtCore import QDate 
import sys 

import time
from datetime import datetime


class Form(QMainWindow):
    def __init__(self,*args,**kwargs):
        super(Form,self).__init__(*args,**kwargs)
        self.setupUi(self)
        self.add_to_combobox()
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(466, 397)
        Form.setFixedSize(466, 397)
        self.setWindowIcon(QtGui.QIcon('b3d.png'))
        self.setWindowTitle('b3d')
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(370, 120, 81, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.get_gain)
        self.comboBox = QtWidgets.QComboBox(Form)
        self.comboBox.setGeometry(QtCore.QRect(340, 30, 111, 22))
        self.comboBox.setEditable(False)
        self.comboBox.setObjectName("comboBox")
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(0, 10, 331, 251))
        self.tableWidget.setRowCount(9)
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setHorizontalHeaderLabels(['الربح','التاريخ',' مجمل المبيع'])
        self.textEdit = QtWidgets.QTextEdit(Form)
        self.textEdit.setGeometry(QtCore.QRect(30, 320, 171, 51))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.radioButton = QtWidgets.QRadioButton(Form)
        self.radioButton.setGeometry(QtCore.QRect(360, 70, 91, 21))
        self.radioButton.setObjectName("radioButton")
        self.radioButton.clicked.connect(self.add_to_combobox)
        self.radioButton.toggled.connect(self.add_to_combobox)
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(20, 290, 201, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.pushButton.setText(_translate("Form", "اظهار"))
        self.textEdit.setPlaceholderText(_translate("Form", "راس المال"))
        self.radioButton.setText(_translate("Form", "الربح اليومي"))
        self.label.setText(_translate("MainWindow", "سعر كامل عناصر المستودع"))
    def get_gain (self):
        y=0
        total=0
        tup=()
        lst1=[]
        last_row=self.tableWidget.rowCount()        
        date=self.comboBox.currentText()
        conn=sqlite3.connect('mytable.db')
        if date == "" :
            self.add_to_combobox()
            return
        else:    
            if self.radioButton.isChecked():
            
                instruction=f" SELECT gain FROM selling_register WHERE date = {date}; "
                instru= f" SELECT selling_price , number FROM selling_register WHERE date = {date};"
            
            else:    
                curs2=conn.cursor()
                instruction2=f" SELECT date FROM selling_register  "
                date_all=curs2.execute(instruction2)
         
                for d in date_all :
                    u=str(d).replace('(','')
                    u=u.replace(')','')
                    u=u.replace(",","")
            
                    u=u.replace("'","")
                    d1_obj=datetime.strptime(u,'%Y-%m-%d')

                    if f'{d1_obj.year}-{d1_obj.month}' == date :
                        tup=tup + d
                        u=str(d).replace('(','')
                        u=u.replace(')','')
                        u=u.replace(",","")
                        b=u
                                    
                if len(tup) > 1 :
                    instruction=f" SELECT gain FROM selling_register WHERE date in {tup}; "
                    instru= f" SELECT selling_price , number FROM selling_register WHERE date in {tup}; "
                else :
                    
                    instruction=f" SELECT gain FROM selling_register WHERE date = {b}; "
                    instru= f" SELECT selling_price , number FROM selling_register WHERE date = {b}; "
                    
                 
            curs=conn.cursor()
            curs1=conn.cursor()
            data=curs.execute(instruction)
            data1=curs1.execute(instru)
            for i in data :
            
                x=str(i).replace('(','')
                x=x.replace(')','')
                x=x.replace(",","")
               
                x=int(x)
                y=y+x
            zdata=data1.fetchall()
            for i ,k in enumerate(zdata):
                   sell_price , number = k
                   
                   total+=sell_price *number
                   
            for  j in range(last_row):
                thecell=self.tableWidget.item(j,0)
                if thecell== None :
                

                    self.tableWidget.setItem(j,0,QTableWidgetItem(str(y)+'ل.س'))
                    self.tableWidget.setItem(j,1,QTableWidgetItem(date))
                    self.tableWidget.setItem(j,2,QTableWidgetItem(str(total)))
                    self.tableWidget.setRowCount(last_row+1)
                    break    
            curs1=conn.cursor()    
            instruction1="SELECT cost_price, number FROM tasks;"
            data=curs1.execute(instruction1)
        
            total=0
            for i , j in enumerate(data):
                cost=j[1]
                number=j[0]
            
            
                total=total+(cost* number)
            self.textEdit.setText(str(total)+'ل.س')
            conn.close()
    def add_to_combobox(self):
        self.comboBox.clear()
        lst=[]
        lsta=[]
        conn = sqlite3.connect('mytable.db')
        curs=conn.cursor()
        instruction= "SELECT date FROM  selling_register;"
        date=curs.execute(instruction)
        
        if self.radioButton.isChecked():
            for i in date :
          
               x=str(i).replace('(','')
               x=x.replace(')','')
               x=x.replace(",","")
               if x not in lsta :
                  lsta.append(x)
            
            if len(lsta) >10 :   
                lst.extend(lsta[-10::])
            else :
                
                lst.extend(lsta[::])    
           

        else:    
           for i in date :
          
               x=str(i).replace('(','')
               x=x.replace(')','')
               x=x.replace(",","")
               x=x.replace("'","")
               d_obj=datetime.strptime(x,'%Y-%m-%d')
               if f'{d_obj.year}-{d_obj.month}' not in lst:
                  lst.append(f'{d_obj.year}-{d_obj.month}')
        conn.close()
        self.comboBox.addItems(lst)
